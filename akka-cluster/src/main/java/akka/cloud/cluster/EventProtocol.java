// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EventProtocol.proto

package akka.cloud.cluster;

public final class EventProtocol {
  private EventProtocol() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class GenericLoggingEvent extends
      com.google.protobuf.GeneratedMessage {
    // Use GenericLoggingEvent.newBuilder() to construct.
    private GenericLoggingEvent() {
      initFields();
    }
    private GenericLoggingEvent(boolean noInit) {}

    private static final GenericLoggingEvent defaultInstance;
    public static GenericLoggingEvent getDefaultInstance() {
      return defaultInstance;
    }

    public GenericLoggingEvent getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return akka.cloud.cluster.EventProtocol.internal_static_GenericLoggingEvent_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return akka.cloud.cluster.EventProtocol.internal_static_GenericLoggingEvent_fieldAccessorTable;
    }

    // required string context = 1;
    public static final int CONTEXT_FIELD_NUMBER = 1;
    private boolean hasContext;
    private java.lang.String context_ = "";
    public boolean hasContext() { return hasContext; }
    public java.lang.String getContext() { return context_; }

    // required string message = 2;
    public static final int MESSAGE_FIELD_NUMBER = 2;
    private boolean hasMessage;
    private java.lang.String message_ = "";
    public boolean hasMessage() { return hasMessage; }
    public java.lang.String getMessage() { return message_; }

    // required uint64 time = 3;
    public static final int TIME_FIELD_NUMBER = 3;
    private boolean hasTime;
    private long time_ = 0L;
    public boolean hasTime() { return hasTime; }
    public long getTime() { return time_; }

    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasContext) return false;
      if (!hasMessage) return false;
      if (!hasTime) return false;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasContext()) {
        output.writeString(1, getContext());
      }
      if (hasMessage()) {
        output.writeString(2, getMessage());
      }
      if (hasTime()) {
        output.writeUInt64(3, getTime());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hasContext()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getContext());
      }
      if (hasMessage()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getMessage());
      }
      if (hasTime()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, getTime());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static akka.cloud.cluster.EventProtocol.GenericLoggingEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.GenericLoggingEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.GenericLoggingEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.GenericLoggingEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.GenericLoggingEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.GenericLoggingEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.GenericLoggingEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.cloud.cluster.EventProtocol.GenericLoggingEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.cloud.cluster.EventProtocol.GenericLoggingEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.GenericLoggingEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(akka.cloud.cluster.EventProtocol.GenericLoggingEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private akka.cloud.cluster.EventProtocol.GenericLoggingEvent result;

      // Construct using akka.cloud.cluster.EventProtocol.GenericLoggingEvent.newBuilder()
      private Builder() {}

      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new akka.cloud.cluster.EventProtocol.GenericLoggingEvent();
        return builder;
      }

      protected akka.cloud.cluster.EventProtocol.GenericLoggingEvent internalGetResult() {
        return result;
      }

      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new akka.cloud.cluster.EventProtocol.GenericLoggingEvent();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(result);
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return akka.cloud.cluster.EventProtocol.GenericLoggingEvent.getDescriptor();
      }

      public akka.cloud.cluster.EventProtocol.GenericLoggingEvent getDefaultInstanceForType() {
        return akka.cloud.cluster.EventProtocol.GenericLoggingEvent.getDefaultInstance();
      }

      public boolean isInitialized() {
        return result.isInitialized();
      }
      public akka.cloud.cluster.EventProtocol.GenericLoggingEvent build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }

      private akka.cloud.cluster.EventProtocol.GenericLoggingEvent buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }

      public akka.cloud.cluster.EventProtocol.GenericLoggingEvent buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        akka.cloud.cluster.EventProtocol.GenericLoggingEvent returnMe = result;
        result = null;
        return returnMe;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof akka.cloud.cluster.EventProtocol.GenericLoggingEvent) {
          return mergeFrom((akka.cloud.cluster.EventProtocol.GenericLoggingEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(akka.cloud.cluster.EventProtocol.GenericLoggingEvent other) {
        if (other == akka.cloud.cluster.EventProtocol.GenericLoggingEvent.getDefaultInstance()) return this;
        if (other.hasContext()) {
          setContext(other.getContext());
        }
        if (other.hasMessage()) {
          setMessage(other.getMessage());
        }
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setContext(input.readString());
              break;
            }
            case 18: {
              setMessage(input.readString());
              break;
            }
            case 24: {
              setTime(input.readUInt64());
              break;
            }
          }
        }
      }


      // required string context = 1;
      public boolean hasContext() {
        return result.hasContext();
      }
      public java.lang.String getContext() {
        return result.getContext();
      }
      public Builder setContext(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasContext = true;
        result.context_ = value;
        return this;
      }
      public Builder clearContext() {
        result.hasContext = false;
        result.context_ = getDefaultInstance().getContext();
        return this;
      }

      // required string message = 2;
      public boolean hasMessage() {
        return result.hasMessage();
      }
      public java.lang.String getMessage() {
        return result.getMessage();
      }
      public Builder setMessage(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasMessage = true;
        result.message_ = value;
        return this;
      }
      public Builder clearMessage() {
        result.hasMessage = false;
        result.message_ = getDefaultInstance().getMessage();
        return this;
      }

      // required uint64 time = 3;
      public boolean hasTime() {
        return result.hasTime();
      }
      public long getTime() {
        return result.getTime();
      }
      public Builder setTime(long value) {
        result.hasTime = true;
        result.time_ = value;
        return this;
      }
      public Builder clearTime() {
        result.hasTime = false;
        result.time_ = 0L;
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GenericLoggingEvent)
    }

    static {
      defaultInstance = new GenericLoggingEvent(true);
      akka.cloud.cluster.EventProtocol.internalForceInit();
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GenericLoggingEvent)
  }

  public static final class AuditEvent extends
      com.google.protobuf.GeneratedMessage {
    // Use AuditEvent.newBuilder() to construct.
    private AuditEvent() {
      initFields();
    }
    private AuditEvent(boolean noInit) {}

    private static final AuditEvent defaultInstance;
    public static AuditEvent getDefaultInstance() {
      return defaultInstance;
    }

    public AuditEvent getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return akka.cloud.cluster.EventProtocol.internal_static_AuditEvent_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return akka.cloud.cluster.EventProtocol.internal_static_AuditEvent_fieldAccessorTable;
    }

    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }

    // required string context = 2;
    public static final int CONTEXT_FIELD_NUMBER = 2;
    private boolean hasContext;
    private java.lang.String context_ = "";
    public boolean hasContext() { return hasContext; }
    public java.lang.String getContext() { return context_; }

    // required string message = 3;
    public static final int MESSAGE_FIELD_NUMBER = 3;
    private boolean hasMessage;
    private java.lang.String message_ = "";
    public boolean hasMessage() { return hasMessage; }
    public java.lang.String getMessage() { return message_; }

    // required uint64 time = 4;
    public static final int TIME_FIELD_NUMBER = 4;
    private boolean hasTime;
    private long time_ = 0L;
    public boolean hasTime() { return hasTime; }
    public long getTime() { return time_; }

    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasName) return false;
      if (!hasContext) return false;
      if (!hasMessage) return false;
      if (!hasTime) return false;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasName()) {
        output.writeString(1, getName());
      }
      if (hasContext()) {
        output.writeString(2, getContext());
      }
      if (hasMessage()) {
        output.writeString(3, getMessage());
      }
      if (hasTime()) {
        output.writeUInt64(4, getTime());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      if (hasContext()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getContext());
      }
      if (hasMessage()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getMessage());
      }
      if (hasTime()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, getTime());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static akka.cloud.cluster.EventProtocol.AuditEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.AuditEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.AuditEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.AuditEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.AuditEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.AuditEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.AuditEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.cloud.cluster.EventProtocol.AuditEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.cloud.cluster.EventProtocol.AuditEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.AuditEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(akka.cloud.cluster.EventProtocol.AuditEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private akka.cloud.cluster.EventProtocol.AuditEvent result;

      // Construct using akka.cloud.cluster.EventProtocol.AuditEvent.newBuilder()
      private Builder() {}

      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new akka.cloud.cluster.EventProtocol.AuditEvent();
        return builder;
      }

      protected akka.cloud.cluster.EventProtocol.AuditEvent internalGetResult() {
        return result;
      }

      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new akka.cloud.cluster.EventProtocol.AuditEvent();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(result);
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return akka.cloud.cluster.EventProtocol.AuditEvent.getDescriptor();
      }

      public akka.cloud.cluster.EventProtocol.AuditEvent getDefaultInstanceForType() {
        return akka.cloud.cluster.EventProtocol.AuditEvent.getDefaultInstance();
      }

      public boolean isInitialized() {
        return result.isInitialized();
      }
      public akka.cloud.cluster.EventProtocol.AuditEvent build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }

      private akka.cloud.cluster.EventProtocol.AuditEvent buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }

      public akka.cloud.cluster.EventProtocol.AuditEvent buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        akka.cloud.cluster.EventProtocol.AuditEvent returnMe = result;
        result = null;
        return returnMe;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof akka.cloud.cluster.EventProtocol.AuditEvent) {
          return mergeFrom((akka.cloud.cluster.EventProtocol.AuditEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(akka.cloud.cluster.EventProtocol.AuditEvent other) {
        if (other == akka.cloud.cluster.EventProtocol.AuditEvent.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasContext()) {
          setContext(other.getContext());
        }
        if (other.hasMessage()) {
          setMessage(other.getMessage());
        }
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setName(input.readString());
              break;
            }
            case 18: {
              setContext(input.readString());
              break;
            }
            case 26: {
              setMessage(input.readString());
              break;
            }
            case 32: {
              setTime(input.readUInt64());
              break;
            }
          }
        }
      }


      // required string name = 1;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }

      // required string context = 2;
      public boolean hasContext() {
        return result.hasContext();
      }
      public java.lang.String getContext() {
        return result.getContext();
      }
      public Builder setContext(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasContext = true;
        result.context_ = value;
        return this;
      }
      public Builder clearContext() {
        result.hasContext = false;
        result.context_ = getDefaultInstance().getContext();
        return this;
      }

      // required string message = 3;
      public boolean hasMessage() {
        return result.hasMessage();
      }
      public java.lang.String getMessage() {
        return result.getMessage();
      }
      public Builder setMessage(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasMessage = true;
        result.message_ = value;
        return this;
      }
      public Builder clearMessage() {
        result.hasMessage = false;
        result.message_ = getDefaultInstance().getMessage();
        return this;
      }

      // required uint64 time = 4;
      public boolean hasTime() {
        return result.hasTime();
      }
      public long getTime() {
        return result.getTime();
      }
      public Builder setTime(long value) {
        result.hasTime = true;
        result.time_ = value;
        return this;
      }
      public Builder clearTime() {
        result.hasTime = false;
        result.time_ = 0L;
        return this;
      }

      // @@protoc_insertion_point(builder_scope:AuditEvent)
    }

    static {
      defaultInstance = new AuditEvent(true);
      akka.cloud.cluster.EventProtocol.internalForceInit();
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:AuditEvent)
  }

  public static final class CounterAddEvent extends
      com.google.protobuf.GeneratedMessage {
    // Use CounterAddEvent.newBuilder() to construct.
    private CounterAddEvent() {
      initFields();
    }
    private CounterAddEvent(boolean noInit) {}

    private static final CounterAddEvent defaultInstance;
    public static CounterAddEvent getDefaultInstance() {
      return defaultInstance;
    }

    public CounterAddEvent getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return akka.cloud.cluster.EventProtocol.internal_static_CounterAddEvent_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return akka.cloud.cluster.EventProtocol.internal_static_CounterAddEvent_fieldAccessorTable;
    }

    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }

    // required uint64 delta = 2;
    public static final int DELTA_FIELD_NUMBER = 2;
    private boolean hasDelta;
    private long delta_ = 0L;
    public boolean hasDelta() { return hasDelta; }
    public long getDelta() { return delta_; }

    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasName) return false;
      if (!hasDelta) return false;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasName()) {
        output.writeString(1, getName());
      }
      if (hasDelta()) {
        output.writeUInt64(2, getDelta());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      if (hasDelta()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, getDelta());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static akka.cloud.cluster.EventProtocol.CounterAddEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.CounterAddEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.CounterAddEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.CounterAddEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.CounterAddEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.CounterAddEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.CounterAddEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.cloud.cluster.EventProtocol.CounterAddEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.cloud.cluster.EventProtocol.CounterAddEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.CounterAddEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(akka.cloud.cluster.EventProtocol.CounterAddEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private akka.cloud.cluster.EventProtocol.CounterAddEvent result;

      // Construct using akka.cloud.cluster.EventProtocol.CounterAddEvent.newBuilder()
      private Builder() {}

      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new akka.cloud.cluster.EventProtocol.CounterAddEvent();
        return builder;
      }

      protected akka.cloud.cluster.EventProtocol.CounterAddEvent internalGetResult() {
        return result;
      }

      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new akka.cloud.cluster.EventProtocol.CounterAddEvent();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(result);
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return akka.cloud.cluster.EventProtocol.CounterAddEvent.getDescriptor();
      }

      public akka.cloud.cluster.EventProtocol.CounterAddEvent getDefaultInstanceForType() {
        return akka.cloud.cluster.EventProtocol.CounterAddEvent.getDefaultInstance();
      }

      public boolean isInitialized() {
        return result.isInitialized();
      }
      public akka.cloud.cluster.EventProtocol.CounterAddEvent build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }

      private akka.cloud.cluster.EventProtocol.CounterAddEvent buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }

      public akka.cloud.cluster.EventProtocol.CounterAddEvent buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        akka.cloud.cluster.EventProtocol.CounterAddEvent returnMe = result;
        result = null;
        return returnMe;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof akka.cloud.cluster.EventProtocol.CounterAddEvent) {
          return mergeFrom((akka.cloud.cluster.EventProtocol.CounterAddEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(akka.cloud.cluster.EventProtocol.CounterAddEvent other) {
        if (other == akka.cloud.cluster.EventProtocol.CounterAddEvent.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasDelta()) {
          setDelta(other.getDelta());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setName(input.readString());
              break;
            }
            case 16: {
              setDelta(input.readUInt64());
              break;
            }
          }
        }
      }


      // required string name = 1;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }

      // required uint64 delta = 2;
      public boolean hasDelta() {
        return result.hasDelta();
      }
      public long getDelta() {
        return result.getDelta();
      }
      public Builder setDelta(long value) {
        result.hasDelta = true;
        result.delta_ = value;
        return this;
      }
      public Builder clearDelta() {
        result.hasDelta = false;
        result.delta_ = 0L;
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CounterAddEvent)
    }

    static {
      defaultInstance = new CounterAddEvent(true);
      akka.cloud.cluster.EventProtocol.internalForceInit();
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CounterAddEvent)
  }

  public static final class CounterSetEvent extends
      com.google.protobuf.GeneratedMessage {
    // Use CounterSetEvent.newBuilder() to construct.
    private CounterSetEvent() {
      initFields();
    }
    private CounterSetEvent(boolean noInit) {}

    private static final CounterSetEvent defaultInstance;
    public static CounterSetEvent getDefaultInstance() {
      return defaultInstance;
    }

    public CounterSetEvent getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return akka.cloud.cluster.EventProtocol.internal_static_CounterSetEvent_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return akka.cloud.cluster.EventProtocol.internal_static_CounterSetEvent_fieldAccessorTable;
    }

    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }

    // required uint32 value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private boolean hasValue;
    private int value_ = 0;
    public boolean hasValue() { return hasValue; }
    public int getValue() { return value_; }

    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasName) return false;
      if (!hasValue) return false;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasName()) {
        output.writeString(1, getName());
      }
      if (hasValue()) {
        output.writeUInt32(2, getValue());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      if (hasValue()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getValue());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static akka.cloud.cluster.EventProtocol.CounterSetEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.CounterSetEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.CounterSetEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.CounterSetEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.CounterSetEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.CounterSetEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.CounterSetEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.cloud.cluster.EventProtocol.CounterSetEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.cloud.cluster.EventProtocol.CounterSetEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.CounterSetEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(akka.cloud.cluster.EventProtocol.CounterSetEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private akka.cloud.cluster.EventProtocol.CounterSetEvent result;

      // Construct using akka.cloud.cluster.EventProtocol.CounterSetEvent.newBuilder()
      private Builder() {}

      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new akka.cloud.cluster.EventProtocol.CounterSetEvent();
        return builder;
      }

      protected akka.cloud.cluster.EventProtocol.CounterSetEvent internalGetResult() {
        return result;
      }

      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new akka.cloud.cluster.EventProtocol.CounterSetEvent();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(result);
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return akka.cloud.cluster.EventProtocol.CounterSetEvent.getDescriptor();
      }

      public akka.cloud.cluster.EventProtocol.CounterSetEvent getDefaultInstanceForType() {
        return akka.cloud.cluster.EventProtocol.CounterSetEvent.getDefaultInstance();
      }

      public boolean isInitialized() {
        return result.isInitialized();
      }
      public akka.cloud.cluster.EventProtocol.CounterSetEvent build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }

      private akka.cloud.cluster.EventProtocol.CounterSetEvent buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }

      public akka.cloud.cluster.EventProtocol.CounterSetEvent buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        akka.cloud.cluster.EventProtocol.CounterSetEvent returnMe = result;
        result = null;
        return returnMe;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof akka.cloud.cluster.EventProtocol.CounterSetEvent) {
          return mergeFrom((akka.cloud.cluster.EventProtocol.CounterSetEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(akka.cloud.cluster.EventProtocol.CounterSetEvent other) {
        if (other == akka.cloud.cluster.EventProtocol.CounterSetEvent.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setName(input.readString());
              break;
            }
            case 16: {
              setValue(input.readUInt32());
              break;
            }
          }
        }
      }


      // required string name = 1;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }

      // required uint32 value = 2;
      public boolean hasValue() {
        return result.hasValue();
      }
      public int getValue() {
        return result.getValue();
      }
      public Builder setValue(int value) {
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder clearValue() {
        result.hasValue = false;
        result.value_ = 0;
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CounterSetEvent)
    }

    static {
      defaultInstance = new CounterSetEvent(true);
      akka.cloud.cluster.EventProtocol.internalForceInit();
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CounterSetEvent)
  }

  public static final class CounterResetEvent extends
      com.google.protobuf.GeneratedMessage {
    // Use CounterResetEvent.newBuilder() to construct.
    private CounterResetEvent() {
      initFields();
    }
    private CounterResetEvent(boolean noInit) {}

    private static final CounterResetEvent defaultInstance;
    public static CounterResetEvent getDefaultInstance() {
      return defaultInstance;
    }

    public CounterResetEvent getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return akka.cloud.cluster.EventProtocol.internal_static_CounterResetEvent_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return akka.cloud.cluster.EventProtocol.internal_static_CounterResetEvent_fieldAccessorTable;
    }

    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }

    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasName) return false;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasName()) {
        output.writeString(1, getName());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static akka.cloud.cluster.EventProtocol.CounterResetEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.CounterResetEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.CounterResetEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.CounterResetEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.CounterResetEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.CounterResetEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.CounterResetEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.cloud.cluster.EventProtocol.CounterResetEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.cloud.cluster.EventProtocol.CounterResetEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.CounterResetEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(akka.cloud.cluster.EventProtocol.CounterResetEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private akka.cloud.cluster.EventProtocol.CounterResetEvent result;

      // Construct using akka.cloud.cluster.EventProtocol.CounterResetEvent.newBuilder()
      private Builder() {}

      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new akka.cloud.cluster.EventProtocol.CounterResetEvent();
        return builder;
      }

      protected akka.cloud.cluster.EventProtocol.CounterResetEvent internalGetResult() {
        return result;
      }

      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new akka.cloud.cluster.EventProtocol.CounterResetEvent();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(result);
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return akka.cloud.cluster.EventProtocol.CounterResetEvent.getDescriptor();
      }

      public akka.cloud.cluster.EventProtocol.CounterResetEvent getDefaultInstanceForType() {
        return akka.cloud.cluster.EventProtocol.CounterResetEvent.getDefaultInstance();
      }

      public boolean isInitialized() {
        return result.isInitialized();
      }
      public akka.cloud.cluster.EventProtocol.CounterResetEvent build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }

      private akka.cloud.cluster.EventProtocol.CounterResetEvent buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }

      public akka.cloud.cluster.EventProtocol.CounterResetEvent buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        akka.cloud.cluster.EventProtocol.CounterResetEvent returnMe = result;
        result = null;
        return returnMe;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof akka.cloud.cluster.EventProtocol.CounterResetEvent) {
          return mergeFrom((akka.cloud.cluster.EventProtocol.CounterResetEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(akka.cloud.cluster.EventProtocol.CounterResetEvent other) {
        if (other == akka.cloud.cluster.EventProtocol.CounterResetEvent.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setName(input.readString());
              break;
            }
          }
        }
      }


      // required string name = 1;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CounterResetEvent)
    }

    static {
      defaultInstance = new CounterResetEvent(true);
      akka.cloud.cluster.EventProtocol.internalForceInit();
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CounterResetEvent)
  }

  public static final class AverageAddEvent extends
      com.google.protobuf.GeneratedMessage {
    // Use AverageAddEvent.newBuilder() to construct.
    private AverageAddEvent() {
      initFields();
    }
    private AverageAddEvent(boolean noInit) {}

    private static final AverageAddEvent defaultInstance;
    public static AverageAddEvent getDefaultInstance() {
      return defaultInstance;
    }

    public AverageAddEvent getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return akka.cloud.cluster.EventProtocol.internal_static_AverageAddEvent_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return akka.cloud.cluster.EventProtocol.internal_static_AverageAddEvent_fieldAccessorTable;
    }

    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }

    // required uint64 value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private boolean hasValue;
    private long value_ = 0L;
    public boolean hasValue() { return hasValue; }
    public long getValue() { return value_; }

    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasName) return false;
      if (!hasValue) return false;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasName()) {
        output.writeString(1, getName());
      }
      if (hasValue()) {
        output.writeUInt64(2, getValue());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      if (hasValue()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, getValue());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static akka.cloud.cluster.EventProtocol.AverageAddEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.AverageAddEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.AverageAddEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.AverageAddEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.AverageAddEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.AverageAddEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.AverageAddEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.cloud.cluster.EventProtocol.AverageAddEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.cloud.cluster.EventProtocol.AverageAddEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.AverageAddEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(akka.cloud.cluster.EventProtocol.AverageAddEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private akka.cloud.cluster.EventProtocol.AverageAddEvent result;

      // Construct using akka.cloud.cluster.EventProtocol.AverageAddEvent.newBuilder()
      private Builder() {}

      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new akka.cloud.cluster.EventProtocol.AverageAddEvent();
        return builder;
      }

      protected akka.cloud.cluster.EventProtocol.AverageAddEvent internalGetResult() {
        return result;
      }

      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new akka.cloud.cluster.EventProtocol.AverageAddEvent();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(result);
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return akka.cloud.cluster.EventProtocol.AverageAddEvent.getDescriptor();
      }

      public akka.cloud.cluster.EventProtocol.AverageAddEvent getDefaultInstanceForType() {
        return akka.cloud.cluster.EventProtocol.AverageAddEvent.getDefaultInstance();
      }

      public boolean isInitialized() {
        return result.isInitialized();
      }
      public akka.cloud.cluster.EventProtocol.AverageAddEvent build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }

      private akka.cloud.cluster.EventProtocol.AverageAddEvent buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }

      public akka.cloud.cluster.EventProtocol.AverageAddEvent buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        akka.cloud.cluster.EventProtocol.AverageAddEvent returnMe = result;
        result = null;
        return returnMe;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof akka.cloud.cluster.EventProtocol.AverageAddEvent) {
          return mergeFrom((akka.cloud.cluster.EventProtocol.AverageAddEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(akka.cloud.cluster.EventProtocol.AverageAddEvent other) {
        if (other == akka.cloud.cluster.EventProtocol.AverageAddEvent.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setName(input.readString());
              break;
            }
            case 16: {
              setValue(input.readUInt64());
              break;
            }
          }
        }
      }


      // required string name = 1;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }

      // required uint64 value = 2;
      public boolean hasValue() {
        return result.hasValue();
      }
      public long getValue() {
        return result.getValue();
      }
      public Builder setValue(long value) {
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder clearValue() {
        result.hasValue = false;
        result.value_ = 0L;
        return this;
      }

      // @@protoc_insertion_point(builder_scope:AverageAddEvent)
    }

    static {
      defaultInstance = new AverageAddEvent(true);
      akka.cloud.cluster.EventProtocol.internalForceInit();
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:AverageAddEvent)
  }

  public static final class AverageResetEvent extends
      com.google.protobuf.GeneratedMessage {
    // Use AverageResetEvent.newBuilder() to construct.
    private AverageResetEvent() {
      initFields();
    }
    private AverageResetEvent(boolean noInit) {}

    private static final AverageResetEvent defaultInstance;
    public static AverageResetEvent getDefaultInstance() {
      return defaultInstance;
    }

    public AverageResetEvent getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return akka.cloud.cluster.EventProtocol.internal_static_AverageResetEvent_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return akka.cloud.cluster.EventProtocol.internal_static_AverageResetEvent_fieldAccessorTable;
    }

    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }

    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasName) return false;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasName()) {
        output.writeString(1, getName());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static akka.cloud.cluster.EventProtocol.AverageResetEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.AverageResetEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.AverageResetEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.AverageResetEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.AverageResetEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.AverageResetEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.AverageResetEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.cloud.cluster.EventProtocol.AverageResetEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static akka.cloud.cluster.EventProtocol.AverageResetEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static akka.cloud.cluster.EventProtocol.AverageResetEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(akka.cloud.cluster.EventProtocol.AverageResetEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private akka.cloud.cluster.EventProtocol.AverageResetEvent result;

      // Construct using akka.cloud.cluster.EventProtocol.AverageResetEvent.newBuilder()
      private Builder() {}

      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new akka.cloud.cluster.EventProtocol.AverageResetEvent();
        return builder;
      }

      protected akka.cloud.cluster.EventProtocol.AverageResetEvent internalGetResult() {
        return result;
      }

      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new akka.cloud.cluster.EventProtocol.AverageResetEvent();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(result);
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return akka.cloud.cluster.EventProtocol.AverageResetEvent.getDescriptor();
      }

      public akka.cloud.cluster.EventProtocol.AverageResetEvent getDefaultInstanceForType() {
        return akka.cloud.cluster.EventProtocol.AverageResetEvent.getDefaultInstance();
      }

      public boolean isInitialized() {
        return result.isInitialized();
      }
      public akka.cloud.cluster.EventProtocol.AverageResetEvent build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }

      private akka.cloud.cluster.EventProtocol.AverageResetEvent buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }

      public akka.cloud.cluster.EventProtocol.AverageResetEvent buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        akka.cloud.cluster.EventProtocol.AverageResetEvent returnMe = result;
        result = null;
        return returnMe;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof akka.cloud.cluster.EventProtocol.AverageResetEvent) {
          return mergeFrom((akka.cloud.cluster.EventProtocol.AverageResetEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(akka.cloud.cluster.EventProtocol.AverageResetEvent other) {
        if (other == akka.cloud.cluster.EventProtocol.AverageResetEvent.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setName(input.readString());
              break;
            }
          }
        }
      }


      // required string name = 1;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:AverageResetEvent)
    }

    static {
      defaultInstance = new AverageResetEvent(true);
      akka.cloud.cluster.EventProtocol.internalForceInit();
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:AverageResetEvent)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GenericLoggingEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GenericLoggingEvent_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_AuditEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_AuditEvent_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CounterAddEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CounterAddEvent_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CounterSetEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CounterSetEvent_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CounterResetEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CounterResetEvent_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_AverageAddEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_AverageAddEvent_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_AverageResetEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_AverageResetEvent_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023EventProtocol.proto\"E\n\023GenericLoggingE" +
      "vent\022\017\n\007context\030\001 \002(\t\022\017\n\007message\030\002 \002(\t\022\014" +
      "\n\004time\030\003 \002(\004\"J\n\nAuditEvent\022\014\n\004name\030\001 \002(\t" +
      "\022\017\n\007context\030\002 \002(\t\022\017\n\007message\030\003 \002(\t\022\014\n\004ti" +
      "me\030\004 \002(\004\".\n\017CounterAddEvent\022\014\n\004name\030\001 \002(" +
      "\t\022\r\n\005delta\030\002 \002(\004\".\n\017CounterSetEvent\022\014\n\004n" +
      "ame\030\001 \002(\t\022\r\n\005value\030\002 \002(\r\"!\n\021CounterReset" +
      "Event\022\014\n\004name\030\001 \002(\t\".\n\017AverageAddEvent\022\014" +
      "\n\004name\030\001 \002(\t\022\r\n\005value\030\002 \002(\004\"!\n\021AverageRe" +
      "setEvent\022\014\n\004name\030\001 \002(\tB\026\n\022akka.cloud.clu",
      "sterH\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_GenericLoggingEvent_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_GenericLoggingEvent_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GenericLoggingEvent_descriptor,
              new java.lang.String[] { "Context", "Message", "Time", },
              akka.cloud.cluster.EventProtocol.GenericLoggingEvent.class,
              akka.cloud.cluster.EventProtocol.GenericLoggingEvent.Builder.class);
          internal_static_AuditEvent_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_AuditEvent_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_AuditEvent_descriptor,
              new java.lang.String[] { "Name", "Context", "Message", "Time", },
              akka.cloud.cluster.EventProtocol.AuditEvent.class,
              akka.cloud.cluster.EventProtocol.AuditEvent.Builder.class);
          internal_static_CounterAddEvent_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_CounterAddEvent_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CounterAddEvent_descriptor,
              new java.lang.String[] { "Name", "Delta", },
              akka.cloud.cluster.EventProtocol.CounterAddEvent.class,
              akka.cloud.cluster.EventProtocol.CounterAddEvent.Builder.class);
          internal_static_CounterSetEvent_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_CounterSetEvent_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CounterSetEvent_descriptor,
              new java.lang.String[] { "Name", "Value", },
              akka.cloud.cluster.EventProtocol.CounterSetEvent.class,
              akka.cloud.cluster.EventProtocol.CounterSetEvent.Builder.class);
          internal_static_CounterResetEvent_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_CounterResetEvent_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CounterResetEvent_descriptor,
              new java.lang.String[] { "Name", },
              akka.cloud.cluster.EventProtocol.CounterResetEvent.class,
              akka.cloud.cluster.EventProtocol.CounterResetEvent.Builder.class);
          internal_static_AverageAddEvent_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_AverageAddEvent_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_AverageAddEvent_descriptor,
              new java.lang.String[] { "Name", "Value", },
              akka.cloud.cluster.EventProtocol.AverageAddEvent.class,
              akka.cloud.cluster.EventProtocol.AverageAddEvent.Builder.class);
          internal_static_AverageResetEvent_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_AverageResetEvent_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_AverageResetEvent_descriptor,
              new java.lang.String[] { "Name", },
              akka.cloud.cluster.EventProtocol.AverageResetEvent.class,
              akka.cloud.cluster.EventProtocol.AverageResetEvent.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  public static void internalForceInit() {}

  // @@protoc_insertion_point(outer_class_scope)
}
